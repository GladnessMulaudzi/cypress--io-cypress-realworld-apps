name: "Perform end-to-end tests with Nullstone"
on:
  pull_request:
    types: [labeled]

env:
  NULLSTONE_ORG: nullstone
  NULLSTONE_STACK: demo-cypress

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - name: Build backend docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: backend
      - name: Save Docker image
        run: |
          docker save backend -o backend.tar
      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: backend.tar
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [build-backend, ephemeral-env-up]
    env:
      NULLSTONE_APP: realworld-api
      NULLSTONE_ENV: ${{ needs.ephemeral-env-up.outputs.env_name }}
    steps:
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - name: Download Docker image from artifacts
        uses: actions/download-artifact@v2
        with:
          name: backend
      - name: Load Docker image
        run: |
          docker load -i backend.tar
      - name: Push docker image
        run: nullstone push --source=backend
      - name: Deploy
        run: nullstone deploy

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend, ephemeral-env-up]
    env:
      NULLSTONE_APP: realworld-api
      NULLSTONE_ENV: ${{ needs.ephemeral-env-up.outputs.env_name }}
    steps:
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - name: Download Docker image from artifacts
        uses: actions/download-artifact@v2
        with:
          name: backend
      - name: Load Docker image
        run: |
          docker load -i backend.tar
      - name: Push docker image
        run: nullstone push --source=backend
      - name: Deploy
        run: nullstone deploy

  ephemeral-env-up:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'e2e'
    outputs:
      env_name: ${{ steps.create.outputs.env_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - id: create
        name: Create Ephemeral Env
        run: |
          env_name=$(nullstone envs new --preview --name="${{ github.head_ref }}-${{ github.event.pull_request.id }}")
          echo "env_name=${env_name}" >> "$GITHUB_OUTPUT"
          echo "NULLSTONE_ENV=${env_name}" >> $GITHUB_ENV
          echo "New unique environment name: ${env_name}"
      - name: Launch Ephemeral Env
        run: nullstone envs up
  ephemeral-env-down:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [e2e-tests, ephemeral-env-up]
    env:
      NULLSTONE_ENV: ${{ needs.ephemeral-env-up.outputs.env_name }}
    steps:
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - name: Destroy ephemeral env
        run: nullstone envs down

  db-seeds:
    runs-on: ubuntu-latest
    needs: [deploy-backend]
    steps:
      - name: Set up Nullstone
        uses: nullstone-io/setup-nullstone-action@v0
      - name: Run seeds
        run: nullstone exec --app=realworld-migrations

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend, db-seeds]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

